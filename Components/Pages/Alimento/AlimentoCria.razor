@page "/alimento/novo"
@rendermode InteractiveServer

@using AppWeb.Models;
@inject AlimentoDAO alimentoDAO;
@inject NavigationManager Navigation;

<PageTitle>Alimento - Novo</PageTitle>


<h1 class="text-xl font-semibold text-gray-800 dark:text-gray-100 mb-6">Novo Alimento</h1>

@if (erro != null)
{
    <div class="alert alert-danger">
        @erro
    </div>
}
<div class="row">
    <div class="col">
<EditForm Model="_novoAlimento" OnSubmit="Salvar">

            <div class="form-group mb-4">
                <label>Nome</label>
                <input @bind-value="_novoAlimento!.Nome" type="text" class="form-control" name="nome"
                       placeholder="Nome do produto ou prato" />
            </div>

            <div class="form-group mb-4">
                <label>Tipo</label>
                <input @bind-value="_novoAlimento!.Tipo" type="text" class="form-control" name="tipo"
                       placeholder="Ex: Doce, Salgado, Bebida" />
            </div>

            <div class="form-group mb-4">
                <label>Valor</label>
                <input @bind-value="_novoAlimento!.Valor" type="number" step="0.01" class="form-control" name="valor"
                       placeholder="Preço (ex: 15.99)" />
            </div>

            <div class="form-group mb-4">
                <label>Ingredientes</label>
                <input @bind-value="_novoAlimento!.Ingredientes" type="text" step="0.01" class="form-control" name="Ingredientes"
                       placeholder="Liste os ingredientes e a descrição, se necessário." />
            </div>

            <button type="submit" class="btn btn-primary">Salvar</button>
        </EditForm>
    </div>
</div>

@code {
    private string? erro = null;
    [SupplyParameterFromForm]
    private Alimento? _novoAlimento { get; set; } = new Alimento();


    private void Salvar()
    {
        try
        {
            if (_novoAlimento.Nome is null || _novoAlimento.Nome == "")
            {
                throw new Exception(message: "O campo nome é obrigatório");
            }
            alimentoDAO.Inserir(_novoAlimento);

            Navigation.NavigateTo(uri: "/alimento");
        }
        catch (Exception ex)
        {
            erro = ex.Message;
        }

    }
}